package is_palindrome

/*
	思路一： 快慢指针，块指针一次走两步，慢指针一次走一步，慢指针每一步入栈，当快指针的next节点为nil时，代表走到尾了,
		这时候需要判断链表长度为奇数还是偶数，如果奇数,则弹出最好一个入栈，然后开始继续遍历，与后续出栈一一对比，偶数...
	思路二： 块慢指针, 当快指针走到next 为nil 时，将慢指针之后的链表进行reverse操作, 然后从分别从头尾开始遍历，一一对比即可
*/

